<?php

declare(strict_types=1);

/*
 * SampleAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SampleAPILib\Models;

use SampleAPILib\ApiHelper;
use SampleAPILib\Utils\DateTimeHelper;
use stdClass;

class Pricing3 implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $membershipFee;

    /**
     * @var \DateTime|null
     */
    private $validityPeriod;

    /**
     * Returns Membership Fee.
     */
    public function getMembershipFee(): ?float
    {
        return $this->membershipFee;
    }

    /**
     * Sets Membership Fee.
     *
     * @maps membershipFee
     */
    public function setMembershipFee(?float $membershipFee): void
    {
        $this->membershipFee = $membershipFee;
    }

    /**
     * Returns Validity Period.
     */
    public function getValidityPeriod(): ?\DateTime
    {
        return $this->validityPeriod;
    }

    /**
     * Sets Validity Period.
     *
     * @maps validityPeriod
     * @factory \SampleAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setValidityPeriod(?\DateTime $validityPeriod): void
    {
        $this->validityPeriod = $validityPeriod;
    }

    /**
     * Converts the Pricing3 object to a human-readable string representation.
     *
     * @return string The string representation of the Pricing3 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Pricing3',
            ['membershipFee' => $this->membershipFee, 'validityPeriod' => $this->validityPeriod]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->membershipFee)) {
            $json['membershipFee']  = $this->membershipFee;
        }
        if (isset($this->validityPeriod)) {
            $json['validityPeriod'] = DateTimeHelper::toRfc3339DateTime($this->validityPeriod);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
