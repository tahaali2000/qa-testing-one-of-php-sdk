<?php

declare(strict_types=1);

/*
 * SampleAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SampleAPILib\Models;

use SampleAPILib\ApiHelper;
use stdClass;

class Pricing4 implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $shippingCost;

    /**
     * @var string|null
     */
    private $shippingMethod;

    /**
     * Returns Shipping Cost.
     */
    public function getShippingCost(): ?float
    {
        return $this->shippingCost;
    }

    /**
     * Sets Shipping Cost.
     *
     * @maps shippingCost
     */
    public function setShippingCost(?float $shippingCost): void
    {
        $this->shippingCost = $shippingCost;
    }

    /**
     * Returns Shipping Method.
     */
    public function getShippingMethod(): ?string
    {
        return $this->shippingMethod;
    }

    /**
     * Sets Shipping Method.
     *
     * @maps shippingMethod
     */
    public function setShippingMethod(?string $shippingMethod): void
    {
        $this->shippingMethod = $shippingMethod;
    }

    /**
     * Converts the Pricing4 object to a human-readable string representation.
     *
     * @return string The string representation of the Pricing4 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Pricing4',
            ['shippingCost' => $this->shippingCost, 'shippingMethod' => $this->shippingMethod]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->shippingCost)) {
            $json['shippingCost']   = $this->shippingCost;
        }
        if (isset($this->shippingMethod)) {
            $json['shippingMethod'] = $this->shippingMethod;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
