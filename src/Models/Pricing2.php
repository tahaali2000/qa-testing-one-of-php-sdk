<?php

declare(strict_types=1);

/*
 * SampleAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SampleAPILib\Models;

use SampleAPILib\ApiHelper;
use stdClass;

class Pricing2 implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $tax;

    /**
     * @var float|null
     */
    private $taxRate;

    /**
     * Returns Tax.
     */
    public function getTax(): ?float
    {
        return $this->tax;
    }

    /**
     * Sets Tax.
     *
     * @maps tax
     */
    public function setTax(?float $tax): void
    {
        $this->tax = $tax;
    }

    /**
     * Returns Tax Rate.
     */
    public function getTaxRate(): ?float
    {
        return $this->taxRate;
    }

    /**
     * Sets Tax Rate.
     *
     * @maps taxRate
     */
    public function setTaxRate(?float $taxRate): void
    {
        $this->taxRate = $taxRate;
    }

    /**
     * Converts the Pricing2 object to a human-readable string representation.
     *
     * @return string The string representation of the Pricing2 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('Pricing2', ['tax' => $this->tax, 'taxRate' => $this->taxRate]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->tax)) {
            $json['tax']     = $this->tax;
        }
        if (isset($this->taxRate)) {
            $json['taxRate'] = $this->taxRate;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
