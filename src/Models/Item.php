<?php

declare(strict_types=1);

/*
 * SampleAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SampleAPILib\Models;

use SampleAPILib\ApiHelper;
use stdClass;

class Item implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var int|null
     */
    private $value;

    /**
     * @var string[]|null
     */
    private $tags;

    /**
     * @var array<string,string>|null
     */
    private $metadata;

    /**
     * @var Details|null
     */
    private $details;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var Pricing|Pricing1|Pricing2|Pricing3|Pricing4|Pricing5|Pricing6|null
     */
    private $pricing;

    /**
     * Returns Id.
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?int $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Value.
     */
    public function getValue(): ?int
    {
        return $this->value;
    }

    /**
     * Sets Value.
     *
     * @maps value
     */
    public function setValue(?int $value): void
    {
        $this->value = $value;
    }

    /**
     * Returns Tags.
     *
     * @return string[]|null
     */
    public function getTags(): ?array
    {
        return $this->tags;
    }

    /**
     * Sets Tags.
     *
     * @maps tags
     *
     * @param string[]|null $tags
     */
    public function setTags(?array $tags): void
    {
        $this->tags = $tags;
    }

    /**
     * Returns Metadata.
     *
     * @return array<string,string>|null
     */
    public function getMetadata(): ?array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * @maps metadata
     *
     * @param array<string,string>|null $metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Details.
     */
    public function getDetails(): ?Details
    {
        return $this->details;
    }

    /**
     * Sets Details.
     *
     * @maps details
     */
    public function setDetails(?Details $details): void
    {
        $this->details = $details;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @maps status
     * @factory \SampleAPILib\Models\StatusEnum::checkValue
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Pricing.
     *
     * @return Pricing|Pricing1|Pricing2|Pricing3|Pricing4|Pricing5|Pricing6|null
     */
    public function getPricing()
    {
        return $this->pricing;
    }

    /**
     * Sets Pricing.
     *
     * @maps pricing
     * @mapsBy anyOf(oneOf(Pricing,Pricing1,Pricing2,Pricing3,Pricing4,Pricing5,Pricing6),null)
     *
     * @param Pricing|Pricing1|Pricing2|Pricing3|Pricing4|Pricing5|Pricing6|null $pricing
     */
    public function setPricing($pricing): void
    {
        $this->pricing = $pricing;
    }

    /**
     * Converts the Item object to a human-readable string representation.
     *
     * @return string The string representation of the Item object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Item',
            [
                'id' => $this->id,
                'name' => $this->name,
                'value' => $this->value,
                'tags' => $this->tags,
                'metadata' => $this->metadata,
                'details' => $this->details,
                'status' => $this->status,
                'pricing' => $this->pricing
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']       = $this->id;
        }
        if (isset($this->name)) {
            $json['name']     = $this->name;
        }
        if (isset($this->value)) {
            $json['value']    = $this->value;
        }
        if (isset($this->tags)) {
            $json['tags']     = $this->tags;
        }
        if (isset($this->metadata)) {
            $json['metadata'] = $this->metadata;
        }
        if (isset($this->details)) {
            $json['details']  = $this->details;
        }
        if (isset($this->status)) {
            $json['status']   = StatusEnum::checkValue($this->status);
        }
        if (isset($this->pricing)) {
            $json['pricing']  =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->pricing,
                    'anyOf(oneOf(Pricing,Pricing1,Pricing2,Pricing3,Pricing4,Pricing5,Pricing6),null)'
                );
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
