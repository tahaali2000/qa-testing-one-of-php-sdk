<?php

declare(strict_types=1);

/*
 * SampleAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SampleAPILib\Models;

use SampleAPILib\ApiHelper;
use stdClass;

class Pricing5 implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $serviceCharge;

    /**
     * @var string|null
     */
    private $description;

    /**
     * Returns Service Charge.
     */
    public function getServiceCharge(): ?float
    {
        return $this->serviceCharge;
    }

    /**
     * Sets Service Charge.
     *
     * @maps serviceCharge
     */
    public function setServiceCharge(?float $serviceCharge): void
    {
        $this->serviceCharge = $serviceCharge;
    }

    /**
     * Returns Description.
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Converts the Pricing5 object to a human-readable string representation.
     *
     * @return string The string representation of the Pricing5 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Pricing5',
            ['serviceCharge' => $this->serviceCharge, 'description' => $this->description]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->serviceCharge)) {
            $json['serviceCharge'] = $this->serviceCharge;
        }
        if (isset($this->description)) {
            $json['description']   = $this->description;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
